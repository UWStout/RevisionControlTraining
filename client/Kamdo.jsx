// Main React Library
import React, { useRef } from 'react'

// React-three-fiber Library
import { useFrame } from '@react-three/fiber'

// Drei GLTF model loader
import { useGLTF } from '@react-three/drei'

// Eased animations
import { easing } from 'maath'

/*
  Kamdo model Auto-generated by: https://github.com/pmndrs/gltfjsx
  Command: npx gltfjsx@6.1.0 s2wt_kamdo_industrial_divinities.glb --transform --simplify

  Original model Source
  =====================
  Author: Hansalex (https://sketchfab.com/Hansalex)
  License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
  Source: https://sketchfab.com/3d-models/s2wt-kamdo-industrial-divinities-f503b70ac05e49a38c81100d71599a1b
  Title: S2WT "Kamdo" (Industrial Divinities)
*/

export default function Kamdo (props) {
  // Forward references to internal geometry and light nodes
  const head = useRef()
  const stripe = useRef()
  const light = useRef()

  // Load the model (will suspend rendering until downloaded and ready)
  const { nodes, materials } = useGLTF('/s2wt_kamdo_industrial_divinities-transformed.glb')

  // Every Frame, run this
  useFrame((state, delta) => {
    // Calculate a time-based value with a slow, sine-wave pulse
    // - Offset by 1, then divide by two so it stays between 0 and 1
    const t = (1 + Math.sin(state.clock.elapsedTime * 2)) / 2

    // Pulse the emissive stripe color over time
    // - Pulsing the intensity of Red and Blue only
    stripe.current.color.setRGB(2 + t * 20, 2, 20 + t * 50)

    // Pulse the light under the drone over time
    light.current.intensity = 1 + t * 4

    // Rotate the head to look towards the mouse cursor (aka 'pointer')
    easing.dampE(
      head.current.rotation,
      [0, state.pointer.x * (state.camera.position.z > 1 ? 1 : -1), 0],
      0.4,
      delta
    )
  })

  return (
    <group {...props}>
      {/* Create mesh node for body */}
      <mesh castShadow receiveShadow geometry={nodes.body001.geometry} material={materials.Body} />

      {/* Create group for head, strip material, and point light */}
      <group ref={head}>
        <mesh castShadow receiveShadow geometry={nodes.head001.geometry} material={materials.Head} />

        {/* Create glowing stripe and point light under drone */}
        <mesh castShadow receiveShadow geometry={nodes.stripe001.geometry}>
          <meshBasicMaterial ref={stripe} toneMapped={false} />
          <pointLight ref={light} intensity={1} color={[10, 2, 5]} distance={2.5} />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('./s2wt_kamdo_industrial_divinities-transformed.glb')
